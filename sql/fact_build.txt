--DROP TABLE    dfm_tdim_202407  PURGE;
CREATE TABLE  dfm_tdim_202407  COMPRESS FOR QUERY HIGH AS

WITH tdim as (

select
  year_month
  ,financial_year
  ,calendar_year
  ,financial_quarter_ext
  ,financial_year||' Q'||financial_quarter as financial_quarter
  ,count(year_month) over(partition by	financial_year)	as	ym_count
  ,count(year_month) over(partition by financial_quarter_ext) as  qtr_count
from
  dim.year_month_dim
where 1  =  1
  and year_month  between 201504  and mgmt.pkg_public_dwh_functions.f_get_latest_period('EPACT2')
) 

select * from tdim where qtr_count = 3
;

--DROP TABLE    dfm_org_dim_202407 PURGE;
CREATE TABLE  dfm_org_dim_202407 COMPRESS FOR QUERY HIGH AS

WITH

max_org AS  (
  SELECT
    MAX(year_month) AS  m_year_month
    ,lvl_5_oupdt
    ,lvl_5_ou
  FROM
    dim.hs_dy_level_5_flat_dim
  WHERE 1 = 1
    AND hs_ctry_ou  = 1
    AND data_added_by_dental  = 'N'
    AND lvl_5_oupdt > 0
  GROUP BY
    lvl_5_oupdt
    ,lvl_5_ou
)

,pcd  AS  (
  SELECT
    year_month
    ,lvl_5_oupdt
    ,lvl_5_ou
    ,CASE WHEN  lvl_5_ou  < 0 THEN  NULL  
          ELSE  LAST_VALUE(UPPER(REPLACE(lvl_5_hist_postcode, ' ', '')))  IGNORE NULLS  OVER(PARTITION BY lvl_5_oupdt, lvl_5_ou, lvl_5_ltst_alt_cde ORDER BY  year_month)
          END AS  lvl_5_cur_postcode
  FROM
    dim.hs_dy_level_5_flat_dim
  WHERE 1 = 1
    AND hs_ctry_ou  = 1
    AND data_added_by_dental  = 'N'
    AND lvl_5_oupdt > 0
)

,cur_pcd  AS  (
  SELECT
    pcd.lvl_5_oupdt
    ,pcd.lvl_5_ou
    ,pcd.lvl_5_cur_postcode
  FROM
    pcd
  INNER JOIN
    max_org
    ON  pcd.lvl_5_oupdt = max_org.lvl_5_oupdt
    AND pcd.lvl_5_ou    = max_org.lvl_5_ou
    AND pcd.year_month  = max_org.m_year_month
)

,org  AS  (
  SELECT
    l5.lvl_5_oupdt
    ,l5.lvl_5_ou
    ,l5.frmttd_lvl_5_ltst_nm
    ,l5.lvl_5_ltst_alt_cde
    ,cur_pcd.lvl_5_cur_postcode
    ,UPPER(REPLACE(ons.pcd, ' ', ''))         AS  pcd
    ,ons.lsoa11 AS  practice_lsoa_code
    ,case 	when	l5.cur_area_ltst_clsd = 'Y' 	or 	l5.cur_area_team_ltst_nm	in	('ENGLISH/WELSH DUMMY DENTAL','UNIDENTIFIED DEPUTISING SERVICES','UNIDENTIFIED DOCTORS')	then	'UNKNOWN ICB'
				else 	l5.cur_frmttd_area_team_ltst_nm	end		as	icb_name
		,case 	when	l5.cur_area_ltst_clsd = 'Y' 	or 	l5.cur_area_team_ltst_nm	in	('ENGLISH/WELSH DUMMY DENTAL','UNIDENTIFIED DEPUTISING SERVICES','UNIDENTIFIED DOCTORS')	then	'-'
				else 	l5.cur_area_team_ltst_alt_cde	end		as	icb_code
		,case 	when	l5.cur_region_ltst_clsd = 'Y' 	or 	l5.cur_region_ltst_nm		in	('ENGLISH/WELSH DUMMY DENTAL','UNIDENTIFIED DEPUTISING SERVICES','UNIDENTIFIED DOCTORS')	then	'UNKNOWN REGION'
				else 	l5.cur_frmttd_region_ltst_nm	end		as	region_name
		,case 	when	l5.cur_region_ltst_clsd = 'Y' 	or 	l5.cur_region_ltst_nm		in	('ENGLISH/WELSH DUMMY DENTAL','UNIDENTIFIED DEPUTISING SERVICES','UNIDENTIFIED DOCTORS')	then	'-'
				else 	l5.cur_region_ltst_alt_cde		end		as	region_code
  FROM
    dim.cur_ep_level_5_flat_dim l5
  INNER JOIN
    cur_pcd
    ON  l5.lvl_5_oupdt  = cur_pcd.lvl_5_oupdt
    AND l5.lvl_5_ou     = cur_pcd.lvl_5_ou
  LEFT OUTER JOIN
    ost.ons_nspl_may_24_11cen ons
    ON  cur_pcd.lvl_5_cur_postcode  = UPPER(REPLACE(ons.pcd, ' ', ''))
)

SELECT  * FROM  org
;

--DROP TABLE    dfm_drug_dim_202407  PURGE;
CREATE TABLE  dfm_drug_dim_202407  COMPRESS FOR QUERY HIGH AS

SELECT
  cdr.year_month
  ,cdr.record_id
  ,CASE
    WHEN cdr.bnf_chemical_substance in ('0408010G0','0408010AE') THEN 'GABAPENTINOIDS'
    WHEN cdr.bnf_chemical_substance in ('0401010T0','0401010L0','0401010N0','0401020E0','0401020K0','0401020P0','0401020T0','0401010R0','0401010P0','0401020A0') THEN 'BENZODIAZEPINES'
    WHEN cdr.bnf_chemical_substance in ('040702020','040702040','040702050','0407010F0','0407010N0','0407020A0','0407020AB','0407020AD','0407020AF','0407020AG','0407020AH','0407020B0','0407020C0','0407020D0','0407020G0','0407020H0',
    '0407020K0','0407020L0','0407020M0','0407020P0','0407020Q0','0407020T0','0407020U0','0407020V0','0407020Z0') THEN 'OPIOIDS'
    WHEN cdr.bnf_chemical_substance in ('0401010Z0','0401010Y0','0401010W0') THEN 'Z-DRUGS'
    WHEN cdr.bnf_chemical_substance in ('0403020Q0','0403020M0','0403020K0','0403040X0','0403010L0','0403010S0','0403040S0','0403010Y0','0403040Y0','0403010V0','0403010X0','0403030L0','0403030E0','0403030D0','0403040W0'
    ,'0403010B0','0403030Q0','0403020H0','0403010J0','0403010F0','0403040R0','0403010T0','0403010C0','0403040T0','0403030P0','0403010N0','0403040AB','0403040F0','0403030Z0','0403040U0','0403010R0','0403030X0','0403040Z0') THEN 'ANTIDEPRESSANTS'                                      
  END AS category  
  ,cdr.gen_presentation_bnf_descr
  ,cdr.generic_bnf_code
  ,cdr.presentation_bnf_descr
  ,cdr.presentation_bnf
  ,cdr.chemical_substance_bnf_descr
  ,cdr.bnf_chemical_substance
  ,cdr.paragraph_descr
  ,cdr.bnf_paragraph
  ,cdr.section_descr
  ,cdr.bnf_section
  ,cdr.vmpp_uom
FROM
  dim.cdr_ep_drug_bnf_dim cdr
INNER JOIN
  dfm_tdim_202407  tdim
  ON  cdr.year_month  = tdim.year_month
WHERE 1 = 1
  AND cdr.bnf_chemical_substance in (
  '0408010G0'
  ,'0408010AE'
  ,'0401010T0'
  ,'0401010L0'
  ,'0401010N0'
  ,'0401020E0'
  ,'0401020K0'
  ,'0401020P0'
  ,'0401020T0'
  ,'0401010R0'
  ,'0401010P0'
  ,'0401020A0'
  ,'040702020'
  ,'040702040'
  ,'040702050'
  ,'0407010F0'
  ,'0407010N0'
  ,'0407020A0'
  ,'0407020AB'
  ,'0407020AD'
  ,'0407020AF'
  ,'0407020AG'
  ,'0407020AH'
  ,'0407020B0'
  ,'0407020C0'
  ,'0407020D0'
  ,'0407020G0'
  ,'0407020H0'
  ,'0407020K0'
  ,'0407020L0'
  ,'0407020M0'
  ,'0407020P0'
  ,'0407020Q0'
  ,'0407020T0'
  ,'0407020U0'
  ,'0407020V0'
  ,'0407020Z0'
  ,'0401010Z0'
  ,'0401010Y0'
  ,'0401010W0'
  ,'0403020Q0'
  ,'0403020M0'
  ,'0403020K0'
  ,'0403040X0'
  ,'0403010L0'
  ,'0403010S0'
  ,'0403040S0'
  ,'0403010Y0'
  ,'0403040Y0'
  ,'0403010V0'
  ,'0403010X0'
  ,'0403030L0'
  ,'0403030E0'
  ,'0403030D0'
  ,'0403040W0'
  ,'0403010B0'
  ,'0403030Q0'
  ,'0403020H0'
  ,'0403010J0'
  ,'0403010F0'
  ,'0403040R0'
  ,'0403010T0'
  ,'0403010C0'
  ,'0403040T0'
  ,'0403030P0'
  ,'0403010N0'
  ,'0403040AB'
  ,'0403040F0'
  ,'0403030Z0'
  ,'0403040U0'
  ,'0403010R0'
  ,'0403030X0'
  ,'0403040Z0')
;

--DROP TABLE    dfm_fact_202407  PURGE;
CREATE TABLE  dfm_fact_202407  COMPRESS FOR  QUERY HIGH  AS

WITH  fact  AS  (
  
 SELECT
    tdim.financial_year
    ,tdim.calendar_year
    ,tdim.financial_quarter
    ,fact.year_month
    ,fact.pds_dob
    ,fact.patient_lsoa_code
    ,fact.identified_patient_id
    ,fact.patient_identified
    ,fact.eps_part_date
    ,org.region_name
    ,org.region_code
    ,org.icb_name
    ,org.icb_code
    ,drug.category
    ,drug.chemical_substance_bnf_descr
    ,drug.bnf_chemical_substance
    ,drug.paragraph_descr
    ,drug.bnf_paragraph
    ,drug.section_descr
    ,drug.bnf_section
    ,org.practice_lsoa_code
    ,nvl(trunc((to_number(substr(tdim.financial_year,1,4)||'0930') - to_number(to_char(fact.pds_dob,'YYYYMMDD')))/10000),-1)	AS	calc_age
    ,sum(item_count)        AS  item_count
    ,sum(item_pay_dr_nic)   AS  item_pay_dr_nic
    ,sum(item_calc_pay_qty) AS  item_calc_pay_qty
  FROM
    aml.px_form_item_elem_comb_fact_av  fact
  INNER JOIN
    dfm_tdim_202407  tdim
    ON  fact.year_month = tdim.year_month
  INNER JOIN
    dfm_org_dim_202407 org
    ON  fact.presc_type_prnt =  org.lvl_5_oupdt
    AND fact.presc_id_prnt   =  org.lvl_5_ou
  INNER JOIN
    dfm_drug_dim_202407  drug
    ON  fact.calc_prec_drug_record_id = drug.record_id
    AND fact.year_month               = drug.year_month
  WHERE 1 = 1
    --  regular exlusions
    AND fact.PAY_DA_END			=	'N' -- excludes disallowed items
    AND fact.PAY_ND_END			=	'N' -- excludes not dispensed items
    AND fact.PAY_RB_END			=	'N' -- excludes referred back items
    AND fact.CD_REQ				=	'N' -- excludes controlled drug requisitions
    AND fact.OOHC_IND			=	0   -- excludes out of hours dispensing
    AND fact.PRIVATE_IND		=	0   -- excludes private dispensers
    AND fact.IGNORE_FLAG		=	'N' -- excludes LDP dummy forms	
    AND	fact.PRESC_TYPE_PRNT	not in	(8,54)	-- excludes private and pharmacy prescribers
    AND fact.mod_flag = 'N'
  GROUP BY
    tdim.financial_year
    ,tdim.calendar_year
    ,tdim.financial_quarter
    ,fact.year_month
    ,fact.pds_dob
    ,fact.patient_lsoa_code
    ,fact.identified_patient_id
    ,fact.patient_identified
    ,fact.eps_part_date
    ,org.region_name
    ,org.region_code
    ,org.icb_name
    ,org.icb_code
    ,drug.category
    ,drug.chemical_substance_bnf_descr
    ,drug.bnf_chemical_substance
    ,drug.paragraph_descr
    ,drug.bnf_paragraph
    ,drug.section_descr
    ,drug.bnf_section
    ,org.practice_lsoa_code
    ,nvl(trunc((to_number(substr(tdim.financial_year,1,4)||'0930') - to_number(to_char(fact.pds_dob,'YYYYMMDD')))/10000),-1)
)

SELECT * from fact
;

--DROP TABLE dfm_patreg_202407 PURGE;
CREATE TABLE dfm_patreg_202407 COMPRESS FOR QUERY HIGH  AS
with
-- get dummy NHS numbers and their attributes
dpr as (
    select
    patient_id
    ,pds_verified
    ,0 as pat_gender_code
    ,'Unknown' as pat_gender
    ,to_date('01-JAN-1901') as pat_dob
  from
    dim.patient_registration_av
  where 1=1
    and patient_id in ('5C21EC99BF6FD21D19D57DB71E8D565E37259B802934F748FCE94969D737B279',
'84D9C4B849506B6D8F8075A9000E7E0A254BE71060EA889FAD3C88395988F4FC',
'CE3A598687C8D2E5AA6BEDAD20E059B4A78CCA0ADAD7E563B07998D5CD226B8C',
'D2D02EA74DE2C9FAB1D802DB969C18D409A8663A9697977BB1C98CCDD9DE4372')
)
-- get all non-dummy info
,pr as (
    select
    patient_id
    ,pds_verified
    ,pat_gender_code
    ,pat_gender
    ,pat_dob
  from
    dim.patient_registration_av
    where 1=1
    and patient_id not in ('5C21EC99BF6FD21D19D57DB71E8D565E37259B802934F748FCE94969D737B279',
'84D9C4B849506B6D8F8075A9000E7E0A254BE71060EA889FAD3C88395988F4FC',
'CE3A598687C8D2E5AA6BEDAD20E059B4A78CCA0ADAD7E563B07998D5CD226B8C',
'D2D02EA74DE2C9FAB1D802DB969C18D409A8663A9697977BB1C98CCDD9DE4372')
)
--union data together to give one dimension
,pat as (
    select
    *
  from
    dpr
  union all
  select
    *
  from
    pr
)

select * from pat;

--DROP TABLE    dfm_fact_category_202407  PURGE;
CREATE TABLE  dfm_fact_category_202407  COMPRESS FOR  QUERY HIGH  AS

WITH  fact  AS  (
select * from dfm_fact_202407
),

lsoa AS  (
  SELECT
    fact.*
   ,NVL(LAST_VALUE(patient_lsoa_code IGNORE NULLS) OVER(PARTITION BY identified_patient_id  ORDER BY  year_month, eps_part_date, patient_lsoa_code  NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), practice_lsoa_code) AS lsoa_code
  FROM
    fact
)

,imd AS  (
  SELECT
    lsoa.*
    ,imd.imd_decile
  FROM
    lsoa
  LEFT OUTER JOIN
    ost.imd_2019  imd
    ON  lsoa.lsoa_code  = imd.lsoa11
)


SELECT
    imd.financial_year
    ,imd.calendar_year
    ,imd.financial_quarter
    ,imd.year_month
    ,imd.pds_dob
    ,imd.identified_patient_id
    ,imd.patient_identified
    ,imd.region_name
    ,imd.region_code
    ,imd.icb_name
    ,imd.icb_code
    ,imd.category
    ,imd.section_descr
    ,imd.bnf_section
    ,imd.paragraph_descr
    ,imd.bnf_paragraph
    ,imd.chemical_substance_bnf_descr
    ,imd.bnf_chemical_substance
    ,imd.calc_age
    ,dems.pat_gender
    ,imd.imd_decile
    ,imd.item_count
    ,imd.item_pay_dr_nic
    ,imd.item_calc_pay_qty
FROM
  imd
LEFT JOIN 
    dfm_patreg_202407 dems
    on imd.identified_patient_id = dems.patient_id
    ;

GRANT SELECT ON dfm_fact_category_202407  TO grali, kigra, mawil, grpla, asemp;  